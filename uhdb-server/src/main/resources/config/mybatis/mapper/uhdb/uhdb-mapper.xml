<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.realsnake.sample.mapper.uhdb.UhdbMapper">

	<select id="selectAptList" parameterType="AptVo" resultType="AptVo">
		SELECT /* selectAptList, 전강욱(realsnake1975@gmail.com) */ aptid AS apt_id,
	    aptnm AS apt_nm,
	    aptsnm AS apts_nm,
	    zipcd AS zip_cd,
	    city,
	    sigu,
	    addr1,
	    addr2,
	    inst_cnt
		FROM tb_ap0101
	    <where>
			<choose>
				<when test=' aptId != null and !"".equals(aptId) '>AND aptid = #{aptId}</when>
				<when test=' aptNm != null and !"".equals(aptNm) '>AND (aptnm LIKE CONCAT('%', #{aptNm}, '%') OR aptsnm LIKE CONCAT('%', #{aptNm}, '%'))</when>
				<otherwise>AND aptid = '@@@@@@'</otherwise>
			</choose>
	    </where>
	</select>

	<select id="selectUhdbList" parameterType="UhdbVo" resultType="UhdbVo">
		SELECT /* selectUhdbList, 전강욱(realsnake1975@gmail.com) */ aptid AS apt_id,
	    aptposi AS apt_posi,
	    aptPosiNm AS apt_posi_nm,
	    router_ip,
	    router_id,
	    gongin_ip,
	    portfw AS port_fw
		FROM tb_ap0102
	    <where>
			<choose>
				<when test=' aptId != null and !"".equals(aptId) '>AND aptid = #{aptId}
					<if test=' aptPosi != null and !"".equals(aptPosi) '>AND aptposi = #{aptPosi}</if>
					<if test=' aptPosiNm != null and !"".equals(aptPosiNm) '>AND aptPosiNm LIKE CONCAT('%', #{aptPosiNm}, '%')</if>
				</when>
				<otherwise>AND aptid = '@@@@@@'</otherwise>
			</choose>
	    </where>
	</select>

	<update id="updateUhdbGonginIp" parameterType="UhdbVo">
		UPDATE /* updateUhdb, 전강욱(realsnake1975@gmail.com) */ tb_ap0102
	    SET upddt = NOW()
	    , gongin_ip = #{gonginIp}
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
	</update>

	<update id="insertUhdbLog" parameterType="UhdbLogVo">
		INSERT INTO /* insertUhdbLog, 전강욱(realsnake1975@gmail.com) */ tb_bx0201 (
			aptid
			, aptposi
			, boxno
			, safefunc
			, useyn
			, stdt
			, dong
			, ho
			, amtgb
			, amt
			, taekbae
			, taekbae_handphone
			, taekbae_pswd
			, handphone
			, pswd
			, upddt
		) VALUES (
			#{aptId}
			, #{aptPosi}
			, #{boxNo}
			, #{safeFunc}
			, 'Y'
			, NOW()
			, #{dong}
			, #{ho}
			, '1'
			, 0
			, #{taekbae}
			, #{taekbaeHandphone}
			, #{taekbaePswd}
			, #{handphone}
			, #{pswd}
			, NOW()
		)
	</update>

	<update id="updateUhdbLog" parameterType="UhdbLogVo">
		UPDATE /* updateUhdbLog, 전강욱(realsnake1975@gmail.com) */ tb_bx0201
		<set>
	    	<choose>
	    		<when test=' safeFunc != null and !"".equals(safeFunc) '>safefunc = #{safeFunc}</when>
	    		<otherwise>safefunc = NULL</otherwise>
	    	</choose>
	    	<if test=' "Y".equals(useYn) or "N".equals(useYn) '>, useyn = #{useYn}</if>
	    	<choose>
	    		<when test=' stDt != null '>, stdt = now()</when>
	    		<otherwise>, stdt = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' enDt != null '>, endt = NOW()</when>
	    		<otherwise>, endt = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' dong != null and !"".equals(dong) '>, dong = #{dong}</when>
	    		<otherwise>, dong = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' ho != null and !"".equals(ho) '>, ho = #{ho}</when>
	    		<otherwise>, ho = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' amtGb != null and !"".equals(amtGb) '>, amtgb = #{amtGb}</when>
	    		<otherwise>, amtgb = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' amt != null and amt > 0 '>, amt = #{amt}</when>
	    		<otherwise>, amt = 0</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' taekbaeHandphone != null and !"".equals(taekbaeHandphone) '>, taekbae_handphone = #{taekbaeHandphone}</when>
	    		<otherwise>, taekbae_handphone = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' taekbaePswd != null and !"".equals(taekbaePswd) '>, taekbae_pswd = #{taekbaePswd}</when>
	    		<otherwise>, taekbae_pswd = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' handphone != null and !"".equals(handphone) '>, handphone = #{handphone}</when>
	    		<otherwise>, handphone = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' taekbae != null and !"".equals(taekbae) '>, taekbae = #{taekbae}</when>
	    		<otherwise>, taekbae = NULL</otherwise>
	    	</choose>
	    	<choose>
	    		<when test=' pswd != null and !"".equals(pswd) '>, pswd = #{pswd}</when>
	    		<otherwise>, pswd = NULL</otherwise>
	    	</choose>
			, upddt = NOW()
		</set>
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
			AND boxno = #{boxNo}
	</update>

	<select id="selectUhdbLog" parameterType="UhdbLogVo" resultType="UhdbLogVo">
		SELECT /* selectAptList, 전강욱(realsnake1975@gmail.com) */ upddt AS upd_dt,
	    aptid AS apt_id,
	    aptposi AS apt_posi,
	    boxno AS box_no,
	    safefunc AS safe_func,
	    useyn AS use_yn,
	    stdt AS st_dt,
	    endt AS en_dt,
	    dong,
	    ho,
	    amtgb AS amt_gb,
	    amt,
	    taekbae_handphone,
	    taekbae_pswd,
	    handphone,
	    taekbae,
	    pswd
		FROM tb_bx0201
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
			<if test=' boxNo != null and !"".equals(boxNo) '>AND boxno = #{boxNo}</if>
			<if test=' pswd != null and !"".equals(pswd) '>AND pswd = #{pswd}</if>
	    ORDER BY upddt DESC
	    LIMIT 1
	</select>

	<sql id="whereClauseOfUhdbLog">
	    <where>
	    	<if test=' aptId != null and !"".equals(aptId) '>AND aptid = #{aptId}</if>
	        <if test=' aptPosi != null and !"".equals(aptPosi) '>AND aptposi = #{aptPosi}</if>
	        <if test=' dong != null and !"".equals(dong) '>AND dong = #{dong}</if>
	        <if test=' ho != null and !"".equals(ho) '>AND ho = #{ho}</if>
		    <choose>
		    	<when test=' pagingHelper.search.startDate != null and !"".equals(pagingHelper.search.startDate) '>
			    	AND reg_date &gt;= CONCAT(#{pagingHelper.search.startDate}, ' 00:00:00')
			    	<if test=' pagingHelper.search.endDate != null and !"".equals(pagingHelper.search.endDate) '>
			    		AND reg_date &lt;= CONCAT(#{pagingHelper.search.endDate}, ' 23:59:59')
			    	</if>
		    	</when>
		    	<otherwise>
			    	<if test=' pagingHelper.search.endDate != null and !"".equals(pagingHelper.search.endDate) '>
			    		AND reg_date &lt;= CONCAT(#{pagingHelper.search.endDate}, ' 23:59:59')
			    	</if>
		    	</otherwise>
		    </choose>
	    	<if test=' pagingHelper.search.keyword != null and !"".equals(pagingHelper.search.keyword) '>
			    <choose>
			    	<when test=' "username".equals(pagingHelper.search.item) '>
						AND username LIKE CONCAT('%', #{pagingHelper.search.keyword}, '%')
			    	</when>
			    	<when test=' "name".equals(pagingHelper.search.item) '>
						AND name = #{pagingHelper.search.keyword}
			    	</when>
			    	<when test=' "mobile".equals(pagingHelper.search.item) '>
						AND mobile = #{pagingHelper.search.keyword}
			    	</when>
			    	<when test=' "email".equals(pagingHelper.search.item) '>
						AND email = #{pagingHelper.search.keyword}
			    	</when>
			    	<otherwise>
						AND (
							username LIKE CONCAT('%', #{pagingHelper.search.keyword}, '%')
						)
			    	</otherwise>
			    </choose>
	    	</if>
	    </where>
	</sql>

	<sql id="orderClauseOfUhdbLog">
		<if test=' pagingHelper != null and pagingHelper.sortList != null '>
			ORDER BY
            <foreach collection="pagingHelper.sortList" item="sort" open="" separator="," close="">
                ${sort.column} ${sort.ascOrDesc}
            </foreach>
        </if>
	</sql>

	<select id="selectUhdbLogListCount" parameterType="UhdbDto" resultType="int">
	    SELECT /* selectUhdbLogListCount, 전강욱(realsnake1975@gmail.com) */ COUNT(*)
	    <choose>
	    	<when test=' "now".equals(gubun) '>FROM tb_bx0201</when>
	    	<otherwise>FROM tb_bx0201h</otherwise>
	    </choose>
	    <include refid="whereClauseOfUhdbLog" />
	</select>

	<select id="selectUhdbLogList" parameterType="UhdbDto" resultType="UhdbLogVo">
		SELECT /* selectUhdbLogList, 전강욱(realsnake1975@gmail.com) */ upddt AS upd_dt,
	    aptid AS apt_id,
	    aptposi AS apt_posi,
	    boxno AS box_no,
	    safefunc AS safe_func,
	    useyn AS use_yn,
	    stdt AS st_dt,
	    endt AS en_dt,
	    dong,
	    ho,
	    amtgb AS amt_gb,
	    amt,
	    taekbae_handphone,
	    taekbae_pswd,
	    handphone,
	    taekbae,
	    pswd
	    <choose>
	    	<when test=' "now".equals(gubun) '>FROM tb_bx0201</when>
	    	<otherwise>FROM tb_bx0201h</otherwise>
	    </choose>
	    <include refid="whereClauseOfUhdbLog" />
	    <include refid="orderClauseOfUhdbLog" />
	    LIMIT #{pagingHelper.startNum}, #{pagingHelper.endNum}
	</select>

	<select id="selectAptUhdbUserList" parameterType="int" resultType="map">
		SELECT /* selectAptUhdbUserList, 전강욱(realsnake1975@gmail.com) */ A.aptid AS apt_id,
	    A.aptnm AS apt_nm,
	    A.aptsnm AS apts_nm,
	    A.zipcd AS zip_cd,
	    A.city,
	    A.sigu,
	    A.addr1,
	    A.addr2,
	    A.inst_cnt,
	    B.aptposi AS apt_posi,
	    B.aptPosiNm AS apt_posi_nm,
        C.dong,
        C.ho
		FROM tb_ap0101 A JOIN tb_ap0102 B ON A.aptid = B.aptid
						 		 JOIN user_uhdb C ON B.aptid = C.apt_id AND B.aptposi = C.uhdb_id
		WHERE C.user_seq = #{userSeq}
			AND C.del_yn = 'N'
        ORDER BY C.seq DESC
	</select>

	<select id="selectUhdbUserPassword" parameterType="UhdbLogVo" resultType="string">
		SELECT /* selectUhdbUserPassword, 전강욱(realsnake1975@gmail.com) */ passwd
		FROM tb_ap0202
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
			AND aptdong = #{dong}
			AND aptho = #{ho}
	    LIMIT 1
	</select>

	<update id="updateUhdbUserPassword" parameterType="UhdbLogVo">
		UPDATE /* updateUhdbUserPassword, 전강욱(realsnake1975@gmail.com) */ tb_ap0202
		SET upddt = NOW()
		, passwd = #{pswd}
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
			AND aptdong = #{dong}
			AND aptho = #{ho}
	</update>

	<update id="insertNfc" parameterType="NfcVo">
		INSERT INTO /* insertNfc, 전강욱(realsnake1975@gmail.com) */ tb_ap0301 (
			insdt
			, aptid
			, aptposi
			, aptdong
			, aptho
			, perid
			, pernm
			, pergb
		) VALUES (
			NOW()
			, #{aptId}
			, #{aptPosi}
			, #{dong}
			, #{ho}
			, #{perId}
			, #{perNm}
			, #{perGb}
		)
	</update>

	<update id="deleteNfc" parameterType="NfcVo">
		DELETE /* deleteNfc, 전강욱(realsnake1975@gmail.com) */ FROM tb_ap0301
		WHERE aptid = #{aptId}
			AND aptposi = #{aptPosi}
			AND aptdong = #{dong}
			AND aptho = #{ho}
			AND perid = #{perId}
	</update>

	<sql id="whereClauseOfUhdbLog4Mobile">
	    <where>
	    	<if test=' "past".equals(gubun) '>seq &lt; #{mobilePagingHelper.nextPageToken}</if>
	    	<if test=' aptId != null and !"".equals(aptId) '>AND aptid = #{aptId}</if>
	        <if test=' aptPosi != null and !"".equals(aptPosi) '>AND aptposi = #{aptPosi}</if>
	        <if test=' dong != null and !"".equals(dong) '>AND dong = #{dong}</if>
	        <if test=' ho != null and !"".equals(ho) '>AND ho = #{ho}</if>
		    <choose>
		    	<when test=' mobilePagingHelper.search.startDate != null and !"".equals(mobilePagingHelper.search.startDate) '>
			    	AND reg_date &gt;= CONCAT(#{mobilePagingHelper.search.startDate}, ' 00:00:00')
			    	<if test=' mobilePagingHelper.search.endDate != null and !"".equals(mobilePagingHelper.search.endDate) '>
			    		AND reg_date &lt;= CONCAT(#{mobilePagingHelper.search.endDate}, ' 23:59:59')
			    	</if>
		    	</when>
		    	<otherwise>
			    	<if test=' mobilePagingHelper.search.endDate != null and !"".equals(mobilePagingHelper.search.endDate) '>
			    		AND reg_date &lt;= CONCAT(#{mobilePagingHelper.search.endDate}, ' 23:59:59')
			    	</if>
		    	</otherwise>
		    </choose>
	    	<if test=' mobilePagingHelper.search.keyword != null and !"".equals(mobilePagingHelper.search.keyword) '>
			    <choose>
			    	<when test=' "username".equals(mobilePagingHelper.search.item) '>
						AND username LIKE CONCAT('%', #{mobilePagingHelper.search.keyword}, '%')
			    	</when>
			    	<when test=' "name".equals(mobilePagingHelper.search.item) '>
						AND name = #{mobilePagingHelper.search.keyword}
			    	</when>
			    	<when test=' "mobile".equals(mobilePagingHelper.search.item) '>
						AND mobile = #{mobilePagingHelper.search.keyword}
			    	</when>
			    	<when test=' "email".equals(mobilePagingHelper.search.item) '>
						AND email = #{mobilePagingHelper.search.keyword}
			    	</when>
			    	<otherwise>
						AND (
							username LIKE CONCAT('%', #{mobilePagingHelper.search.keyword}, '%')
						)
			    	</otherwise>
			    </choose>
	    	</if>
	    </where>
	</sql>

	<sql id="orderClauseOfUhdbLog4Mobile">
		<if test=' mobilePagingHelper != null and mobilePagingHelper.sortList != null '>
			ORDER BY
            <foreach collection="mobilePagingHelper.sortList" item="sort" open="" separator="," close="">
                ${sort.column} ${sort.ascOrDesc}
            </foreach>
        </if>
	</sql>

	<select id="selectUhdbLogListCount4Mobile" parameterType="UhdbDto" resultType="int">
	    SELECT /* selectUhdbLogListCount4Mobile, 전강욱(realsnake1975@gmail.com) */ COUNT(*)
	    <choose>
	    	<when test=' "now".equals(gubun) '>FROM tb_bx0201</when>
	    	<otherwise>FROM tb_bx0201h</otherwise>
	    </choose>
	    <include refid="whereClauseOfUhdbLog4Mobile" />
	</select>

	<select id="selectUhdbLogList4Mobile" parameterType="UhdbDto" resultType="UhdbLogVo">
		SELECT /* selectUhdbLogList4Mobile, 전강욱(realsnake1975@gmail.com) */ upddt AS upd_dt,
	    aptid AS apt_id,
	    aptposi AS apt_posi,
	    boxno AS box_no,
	    safefunc AS safe_func,
	    useyn AS use_yn,
	    stdt AS st_dt,
	    endt AS en_dt,
	    dong,
	    ho,
	    amtgb AS amt_gb,
	    amt,
	    taekbae_handphone,
	    taekbae_pswd,
	    handphone,
	    taekbae,
	    pswd,
	    <choose>
	    	<when test=' "now".equals(gubun) '>
	    		0 AS seq
	    		FROM tb_bx0201
	    	</when>
	    	<otherwise>
	    		seq
	    		FROM tb_bx0201h
	    	</otherwise>
	    </choose>
	    <include refid="whereClauseOfUhdbLog4Mobile" />
	    <include refid="orderClauseOfUhdbLog4Mobile" />
		LIMIT 0, #{mobilePagingHelper.pageSize}
	</select>

</mapper>
